TXT
 1. Создать внешний репозиторий c названием TXT. 
 2. Клонировать репозиторий TXT на локальный компьютер. (git clone https://github.com/ekaravaeva/TXT.git)
 3. Внутри локального TXT создать файл “new.txt”. (cd TXT && > new.txt)
 4. Добавить файл под гит. (git add .)
 5. Закоммитить файл. (git commit -m "create new.txt")
 6. Отправить файл на внешний GitHub репозиторий. (git push)
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе. (vim new.txt)
 8. Отправить изменения на внешний репозиторий. (git commit -am "edit new.txt")
 9. Создать файл preferences.txt (> preferences.txt)
 10. В файл preferences.txt” добавить информацию о своих предпочтениях в формате TXT. (vim preferences.txt)
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT (> skills.txt)
 12. Сделать коммит в одну строку. (git add . &&  git commit -m "edit preferences skills")
 13. Отправить сразу 2 файла на внешний репозиторий. (git push)
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT (git pull)

JSON
 1. Создать внешний репозиторий c названием JSON. 
 2. Клонировать репозиторий JSON на локальный компьютер. (git clone https://github.com/ekaravaeva/JSON.git)
 3. Внутри локального JSON создать файл “new.json”. (cd JSON && > new.json)
 4. Добавить файл под гит. (git add .)
 5. Закоммитить файл. (git commit -m "create new.json")
 6. Отправить файл на внешний GitHub репозиторий. (git push)
 7. Отредактировать содержание файла “new.json” - написать информацию о себе. (vim new.json)
 8. Отправить изменения на внешний репозиторий. (git commit -am "edit new.json")
 9. Создать файл preferences.json (> preferences.json)
 10. В файл preferences.json добавить информацию о своих предпочтениях. (vim preferences.json)
 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON. (> skills.json)
 12. Сделать коммит в одну строку. (git add . &&  git commit -m "edit preferences skills")
 13. Отправить сразу 2 файла на внешний репозиторий. (git push)
 14. На веб интерфейсе создать файл bug_report.json.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий JSON. (git pull)
 
 XML
 1. Создать внешний репозиторий c названием XML.
 2. Клонировать репозиторий XML на локальный компьютер. (git clone https://github.com/ekaravaeva/XML.git)
 3. Внутри локального XML создать файл “new.xml”. (cd XML && > new.xml)
 4. Добавить файл под гит. (git add .)
 5. Закоммитить файл. (git commit -m "create new.xml")
 6. Отправить файл на внешний GitHub репозиторий. (git push)
 7. Отредактировать содержание файла “new.xml” - написать информацию о себе. (vim new.xml)
 8. Отправить изменения на внешний репозиторий. (git commit -am "edit new.xml")
 9. Создать файл preferences.xml (> preferences.xml)
 10. В файл preferences.xml добавить информацию о своих предпочтениях. (vim preferences.xml)
 11. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML. (> skills.xml)
 12. Сделать коммит в одну строку. (git add . &&  git commit -m "edit preferences skills")
 13. Отправить сразу 2 файла на внешний репозиторий. (git push)
 14. На веб интерфейсе создать файл bug_report.xml.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий XML. (git pull)
